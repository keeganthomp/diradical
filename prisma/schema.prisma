// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  wallet        String   @unique @db.VarChar(255)
  singles       Track[]
  albums        Album[]
  votes         Vote[]
  membershipExp Int?
}

model Album {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(100)
  tracks    Track[]
  user      User     @relation(fields: [userId], references: [wallet])
  userId    String
}

model Track {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(30)
  genre     String?  @db.VarChar(30)
  source    String   @db.VarChar(255) // S3 URL
  coverArt  String   @db.VarChar(255) // S3 URL
  artist    User?    @relation(fields: [userId], references: [wallet])
  userId    String
  album     Album?   @relation(fields: [albumId], references: [id])
  albumId   String?
  songId    Int
  archived  Boolean  @default(false)
  votes     Vote[]
}

model Vote {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  period    Int
  track     Track    @relation(fields: [trackId], references: [id])
  trackId   String
  user      User     @relation(fields: [userId], references: [wallet])
  userId    String

  @@unique([period, trackId, userId]) // user cannot vote for the same song twice in the same period
}
