// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  wallet        String   @unique @db.VarChar(255)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  membershipExp Int
  username      String?  @db.VarChar(30)
  tracks        Track[]
  castedVotes   Vote[]   @relation("voter")
  votesReceived Vote[]   @relation("artist")
  payouts       Payout[]
}

model Payout {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  period    Int
  receiver  User?    @relation(fields: [wallet], references: [wallet])
  wallet    String
  amount    String

  @@unique([period, wallet])
}

model Track {
  id        Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(30)
  audio     String   @unique @db.VarChar(46) // IPFS hash
  coverArt  String   @db.VarChar(46) // IPFS hash
  artist    User?    @relation(fields: [wallet], references: [wallet])
  wallet    String
  archived  Boolean  @default(false)
}

model Vote {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  period       Int
  artist       User     @relation("artist", fields: [artistWallet], references: [wallet])
  artistWallet String
  voter        User     @relation("voter", fields: [voterWallet], references: [wallet])
  voterWallet  String

  @@unique([period, voterWallet]) // user cannot vote for the same song twice in the same period
}
